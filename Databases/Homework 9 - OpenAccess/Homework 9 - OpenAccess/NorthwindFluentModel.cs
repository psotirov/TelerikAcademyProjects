

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using NorthwindEntitiesModel;

namespace NorthwindEntitiesModel	
{
	public partial class NorthwindFluentModel : OpenAccessContext, INorthwindFluentModelUnitOfWork
	{
		private static string connectionStringName = @"NorthwindConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = new NorthwindFluentModelMetadataSource();
		
		public NorthwindFluentModel()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public NorthwindFluentModel(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public NorthwindFluentModel(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public NorthwindFluentModel(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public NorthwindFluentModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<WorkHoursLog> WorkHoursLogs 
		{
			get
			{
				return this.GetAll<WorkHoursLog>();
			}
		}
		
		public IQueryable<WorkHour> WorkHours 
		{
			get
			{
				return this.GetAll<WorkHour>();
			}
		}
		
		public IQueryable<User> Users 
		{
			get
			{
				return this.GetAll<User>();
			}
		}
		
		public IQueryable<Territory> Territories 
		{
			get
			{
				return this.GetAll<Territory>();
			}
		}
		
		public IQueryable<Supplier> Suppliers 
		{
			get
			{
				return this.GetAll<Supplier>();
			}
		}
		
		public IQueryable<Shipper> Shippers 
		{
			get
			{
				return this.GetAll<Shipper>();
			}
		}
		
		public IQueryable<Region> Regions 
		{
			get
			{
				return this.GetAll<Region>();
			}
		}
		
		public IQueryable<Product> Products 
		{
			get
			{
				return this.GetAll<Product>();
			}
		}
		
		public IQueryable<Order> Orders 
		{
			get
			{
				return this.GetAll<Order>();
			}
		}
		
		public IQueryable<OrderDetail> OrderDetails 
		{
			get
			{
				return this.GetAll<OrderDetail>();
			}
		}
		
		public IQueryable<Group> Groups 
		{
			get
			{
				return this.GetAll<Group>();
			}
		}
		
		public IQueryable<Employee> Employees 
		{
			get
			{
				return this.GetAll<Employee>();
			}
		}
		
		public IQueryable<Customer> Customers 
		{
			get
			{
				return this.GetAll<Customer>();
			}
		}
		
		public IQueryable<CustomerDemographic> CustomerDemographics 
		{
			get
			{
				return this.GetAll<CustomerDemographic>();
			}
		}
		
		public IQueryable<Category> Categories 
		{
			get
			{
				return this.GetAll<Category>();
			}
		}
		
		public IQueryable<SummaryOfSalesByYear> SummaryOfSalesByYears 
		{
			get
			{
				return this.GetAll<SummaryOfSalesByYear>();
			}
		}
		
		public IQueryable<SummaryOfSalesByQuarter> SummaryOfSalesByQuarters 
		{
			get
			{
				return this.GetAll<SummaryOfSalesByQuarter>();
			}
		}
		
		public IQueryable<SalesTotalsByAmount> SalesTotalsByAmounts 
		{
			get
			{
				return this.GetAll<SalesTotalsByAmount>();
			}
		}
		
		public IQueryable<SalesByCategory> SalesByCategories 
		{
			get
			{
				return this.GetAll<SalesByCategory>();
			}
		}
		
		public IQueryable<QuarterlyOrder> QuarterlyOrders 
		{
			get
			{
				return this.GetAll<QuarterlyOrder>();
			}
		}
		
		public IQueryable<ProductsByCategory> ProductsByCategories 
		{
			get
			{
				return this.GetAll<ProductsByCategory>();
			}
		}
		
		public IQueryable<ProductsAboveAveragePrice> ProductsAboveAveragePrices 
		{
			get
			{
				return this.GetAll<ProductsAboveAveragePrice>();
			}
		}
		
		public IQueryable<ProductSalesFor1997> ProductSalesFor1997 
		{
			get
			{
				return this.GetAll<ProductSalesFor1997>();
			}
		}
		
		public IQueryable<OrdersQry> OrdersQries 
		{
			get
			{
				return this.GetAll<OrdersQry>();
			}
		}
		
		public IQueryable<OrderSubtotal> OrderSubtotals 
		{
			get
			{
				return this.GetAll<OrderSubtotal>();
			}
		}
		
		public IQueryable<OrderDetailsExtended> OrderDetailsExtendeds 
		{
			get
			{
				return this.GetAll<OrderDetailsExtended>();
			}
		}
		
		public IQueryable<Invoice> Invoices 
		{
			get
			{
				return this.GetAll<Invoice>();
			}
		}
		
		public IQueryable<CustomerAndSuppliersByCity> CustomerAndSuppliersByCities 
		{
			get
			{
				return this.GetAll<CustomerAndSuppliersByCity>();
			}
		}
		
		public IQueryable<CurrentProductList> CurrentProductLists 
		{
			get
			{
				return this.GetAll<CurrentProductList>();
			}
		}
		
		public IQueryable<CategorySalesFor1997> CategorySalesFor1997 
		{
			get
			{
				return this.GetAll<CategorySalesFor1997>();
			}
		}
		
		public IQueryable<AlphabeticalListOfProduct> AlphabeticalListOfProducts 
		{
			get
			{
				return this.GetAll<AlphabeticalListOfProduct>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
			return backend;
		}
	}
	
	public interface INorthwindFluentModelUnitOfWork : IUnitOfWork
	{
		IQueryable<WorkHoursLog> WorkHoursLogs
		{
			get;
		}
		IQueryable<WorkHour> WorkHours
		{
			get;
		}
		IQueryable<User> Users
		{
			get;
		}
		IQueryable<Territory> Territories
		{
			get;
		}
		IQueryable<Supplier> Suppliers
		{
			get;
		}
		IQueryable<Shipper> Shippers
		{
			get;
		}
		IQueryable<Region> Regions
		{
			get;
		}
		IQueryable<Product> Products
		{
			get;
		}
		IQueryable<Order> Orders
		{
			get;
		}
		IQueryable<OrderDetail> OrderDetails
		{
			get;
		}
		IQueryable<Group> Groups
		{
			get;
		}
		IQueryable<Employee> Employees
		{
			get;
		}
		IQueryable<Customer> Customers
		{
			get;
		}
		IQueryable<CustomerDemographic> CustomerDemographics
		{
			get;
		}
		IQueryable<Category> Categories
		{
			get;
		}
		IQueryable<SummaryOfSalesByYear> SummaryOfSalesByYears
		{
			get;
		}
		IQueryable<SummaryOfSalesByQuarter> SummaryOfSalesByQuarters
		{
			get;
		}
		IQueryable<SalesTotalsByAmount> SalesTotalsByAmounts
		{
			get;
		}
		IQueryable<SalesByCategory> SalesByCategories
		{
			get;
		}
		IQueryable<QuarterlyOrder> QuarterlyOrders
		{
			get;
		}
		IQueryable<ProductsByCategory> ProductsByCategories
		{
			get;
		}
		IQueryable<ProductsAboveAveragePrice> ProductsAboveAveragePrices
		{
			get;
		}
		IQueryable<ProductSalesFor1997> ProductSalesFor1997
		{
			get;
		}
		IQueryable<OrdersQry> OrdersQries
		{
			get;
		}
		IQueryable<OrderSubtotal> OrderSubtotals
		{
			get;
		}
		IQueryable<OrderDetailsExtended> OrderDetailsExtendeds
		{
			get;
		}
		IQueryable<Invoice> Invoices
		{
			get;
		}
		IQueryable<CustomerAndSuppliersByCity> CustomerAndSuppliersByCities
		{
			get;
		}
		IQueryable<CurrentProductList> CurrentProductLists
		{
			get;
		}
		IQueryable<CategorySalesFor1997> CategorySalesFor1997
		{
			get;
		}
		IQueryable<AlphabeticalListOfProduct> AlphabeticalListOfProducts
		{
			get;
		}
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class WorkHoursLog
	{
		private int _logId;
		public virtual int LogId
		{
			get
			{
				return this._logId;
			}
			set
			{
				this._logId = value;
			}
		}
		
		private string _command;
		public virtual string Command
		{
			get
			{
				return this._command;
			}
			set
			{
				this._command = value;
			}
		}
		
		private string _oldRecord;
		public virtual string OldRecord
		{
			get
			{
				return this._oldRecord;
			}
			set
			{
				this._oldRecord = value;
			}
		}
		
		private string _newRecord;
		public virtual string NewRecord
		{
			get
			{
				return this._newRecord;
			}
			set
			{
				this._newRecord = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class WorkHour
	{
		private int _workHourId;
		public virtual int WorkHourId
		{
			get
			{
				return this._workHourId;
			}
			set
			{
				this._workHourId = value;
			}
		}
		
		private int _employeeId;
		public virtual int EmployeeId
		{
			get
			{
				return this._employeeId;
			}
			set
			{
				this._employeeId = value;
			}
		}
		
		private DateTime _workDate;
		public virtual DateTime WorkDate
		{
			get
			{
				return this._workDate;
			}
			set
			{
				this._workDate = value;
			}
		}
		
		private string _task;
		public virtual string Task
		{
			get
			{
				return this._task;
			}
			set
			{
				this._task = value;
			}
		}
		
		private int _workHours;
		public virtual int WorkHours
		{
			get
			{
				return this._workHours;
			}
			set
			{
				this._workHours = value;
			}
		}
		
		private string _comments;
		public virtual string Comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments = value;
			}
		}
		
		private Employee _employee;
		public virtual Employee Employee
		{
			get
			{
				return this._employee;
			}
			set
			{
				this._employee = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class User
	{
		private int _userId;
		public virtual int UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				this._userId = value;
			}
		}
		
		private string _username;
		public virtual string Username
		{
			get
			{
				return this._username;
			}
			set
			{
				this._username = value;
			}
		}
		
		private int? _groupId;
		public virtual int? GroupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				this._groupId = value;
			}
		}
		
		private string _fullName;
		public virtual string FullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				this._fullName = value;
			}
		}
		
		private string _password;
		public virtual string Password
		{
			get
			{
				return this._password;
			}
			set
			{
				this._password = value;
			}
		}
		
		private Group _group;
		public virtual Group Group
		{
			get
			{
				return this._group;
			}
			set
			{
				this._group = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Territory
	{
		private string _territoryID;
		public virtual string TerritoryID
		{
			get
			{
				return this._territoryID;
			}
			set
			{
				this._territoryID = value;
			}
		}
		
		private string _territoryDescription;
		public virtual string TerritoryDescription
		{
			get
			{
				return this._territoryDescription;
			}
			set
			{
				this._territoryDescription = value;
			}
		}
		
		private int _regionID;
		public virtual int RegionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				this._regionID = value;
			}
		}
		
		private Region _region;
		public virtual Region Region
		{
			get
			{
				return this._region;
			}
			set
			{
				this._region = value;
			}
		}
		
		private IList<Employee> _employees = new List<Employee>();
		public virtual IList<Employee> Employees
		{
			get
			{
				return this._employees;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Supplier
	{
		private int _supplierID;
		public virtual int SupplierID
		{
			get
			{
				return this._supplierID;
			}
			set
			{
				this._supplierID = value;
			}
		}
		
		private string _companyName;
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				this._companyName = value;
			}
		}
		
		private string _contactName;
		public virtual string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				this._contactName = value;
			}
		}
		
		private string _contactTitle;
		public virtual string ContactTitle
		{
			get
			{
				return this._contactTitle;
			}
			set
			{
				this._contactTitle = value;
			}
		}
		
		private string _address;
		public virtual string Address
		{
			get
			{
				return this._address;
			}
			set
			{
				this._address = value;
			}
		}
		
		private string _city;
		public virtual string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
			}
		}
		
		private string _region;
		public virtual string Region
		{
			get
			{
				return this._region;
			}
			set
			{
				this._region = value;
			}
		}
		
		private string _postalCode;
		public virtual string PostalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				this._postalCode = value;
			}
		}
		
		private string _country;
		public virtual string Country
		{
			get
			{
				return this._country;
			}
			set
			{
				this._country = value;
			}
		}
		
		private string _phone;
		public virtual string Phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				this._phone = value;
			}
		}
		
		private string _fax;
		public virtual string Fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				this._fax = value;
			}
		}
		
		private string _homePage;
		public virtual string HomePage
		{
			get
			{
				return this._homePage;
			}
			set
			{
				this._homePage = value;
			}
		}
		
		private IList<Product> _products = new List<Product>();
		public virtual IList<Product> Products
		{
			get
			{
				return this._products;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Shipper
	{
		private int _shipperID;
		public virtual int ShipperID
		{
			get
			{
				return this._shipperID;
			}
			set
			{
				this._shipperID = value;
			}
		}
		
		private string _companyName;
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				this._companyName = value;
			}
		}
		
		private string _phone;
		public virtual string Phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				this._phone = value;
			}
		}
		
		private IList<Order> _orders = new List<Order>();
		public virtual IList<Order> Orders
		{
			get
			{
				return this._orders;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Region
	{
		private int _regionID;
		public virtual int RegionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				this._regionID = value;
			}
		}
		
		private string _regionDescription;
		public virtual string RegionDescription
		{
			get
			{
				return this._regionDescription;
			}
			set
			{
				this._regionDescription = value;
			}
		}
		
		private IList<Territory> _territories = new List<Territory>();
		public virtual IList<Territory> Territories
		{
			get
			{
				return this._territories;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Product
	{
		private int _productID;
		public virtual int ProductID
		{
			get
			{
				return this._productID;
			}
			set
			{
				this._productID = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private int? _supplierID;
		public virtual int? SupplierID
		{
			get
			{
				return this._supplierID;
			}
			set
			{
				this._supplierID = value;
			}
		}
		
		private int? _categoryID;
		public virtual int? CategoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				this._categoryID = value;
			}
		}
		
		private string _quantityPerUnit;
		public virtual string QuantityPerUnit
		{
			get
			{
				return this._quantityPerUnit;
			}
			set
			{
				this._quantityPerUnit = value;
			}
		}
		
		private decimal? _unitPrice;
		public virtual decimal? UnitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				this._unitPrice = value;
			}
		}
		
		private short? _unitsInStock;
		public virtual short? UnitsInStock
		{
			get
			{
				return this._unitsInStock;
			}
			set
			{
				this._unitsInStock = value;
			}
		}
		
		private short? _unitsOnOrder;
		public virtual short? UnitsOnOrder
		{
			get
			{
				return this._unitsOnOrder;
			}
			set
			{
				this._unitsOnOrder = value;
			}
		}
		
		private short? _reorderLevel;
		public virtual short? ReorderLevel
		{
			get
			{
				return this._reorderLevel;
			}
			set
			{
				this._reorderLevel = value;
			}
		}
		
		private bool _discontinued;
		public virtual bool Discontinued
		{
			get
			{
				return this._discontinued;
			}
			set
			{
				this._discontinued = value;
			}
		}
		
		private Category _category;
		public virtual Category Category
		{
			get
			{
				return this._category;
			}
			set
			{
				this._category = value;
			}
		}
		
		private Supplier _supplier;
		public virtual Supplier Supplier
		{
			get
			{
				return this._supplier;
			}
			set
			{
				this._supplier = value;
			}
		}
		
		private IList<OrderDetail> _orderDetails = new List<OrderDetail>();
		public virtual IList<OrderDetail> OrderDetails
		{
			get
			{
				return this._orderDetails;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Order
	{
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private string _customerID;
		public virtual string CustomerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				this._customerID = value;
			}
		}
		
		private int? _employeeID;
		public virtual int? EmployeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				this._employeeID = value;
			}
		}
		
		private DateTime? _orderDate;
		public virtual DateTime? OrderDate
		{
			get
			{
				return this._orderDate;
			}
			set
			{
				this._orderDate = value;
			}
		}
		
		private DateTime? _requiredDate;
		public virtual DateTime? RequiredDate
		{
			get
			{
				return this._requiredDate;
			}
			set
			{
				this._requiredDate = value;
			}
		}
		
		private DateTime? _shippedDate;
		public virtual DateTime? ShippedDate
		{
			get
			{
				return this._shippedDate;
			}
			set
			{
				this._shippedDate = value;
			}
		}
		
		private int? _shipVia;
		public virtual int? ShipVia
		{
			get
			{
				return this._shipVia;
			}
			set
			{
				this._shipVia = value;
			}
		}
		
		private decimal? _freight;
		public virtual decimal? Freight
		{
			get
			{
				return this._freight;
			}
			set
			{
				this._freight = value;
			}
		}
		
		private string _shipName;
		public virtual string ShipName
		{
			get
			{
				return this._shipName;
			}
			set
			{
				this._shipName = value;
			}
		}
		
		private string _shipAddress;
		public virtual string ShipAddress
		{
			get
			{
				return this._shipAddress;
			}
			set
			{
				this._shipAddress = value;
			}
		}
		
		private string _shipCity;
		public virtual string ShipCity
		{
			get
			{
				return this._shipCity;
			}
			set
			{
				this._shipCity = value;
			}
		}
		
		private string _shipRegion;
		public virtual string ShipRegion
		{
			get
			{
				return this._shipRegion;
			}
			set
			{
				this._shipRegion = value;
			}
		}
		
		private string _shipPostalCode;
		public virtual string ShipPostalCode
		{
			get
			{
				return this._shipPostalCode;
			}
			set
			{
				this._shipPostalCode = value;
			}
		}
		
		private string _shipCountry;
		public virtual string ShipCountry
		{
			get
			{
				return this._shipCountry;
			}
			set
			{
				this._shipCountry = value;
			}
		}
		
		private Customer _customer;
		public virtual Customer Customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				this._customer = value;
			}
		}
		
		private Employee _employee;
		public virtual Employee Employee
		{
			get
			{
				return this._employee;
			}
			set
			{
				this._employee = value;
			}
		}
		
		private Shipper _shipper;
		public virtual Shipper Shipper
		{
			get
			{
				return this._shipper;
			}
			set
			{
				this._shipper = value;
			}
		}
		
		private IList<OrderDetail> _orderDetails = new List<OrderDetail>();
		public virtual IList<OrderDetail> OrderDetails
		{
			get
			{
				return this._orderDetails;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class OrderDetail
	{
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private int _productID;
		public virtual int ProductID
		{
			get
			{
				return this._productID;
			}
			set
			{
				this._productID = value;
			}
		}
		
		private decimal _unitPrice;
		public virtual decimal UnitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				this._unitPrice = value;
			}
		}
		
		private short _quantity;
		public virtual short Quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				this._quantity = value;
			}
		}
		
		private float _discount;
		public virtual float Discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				this._discount = value;
			}
		}
		
		private Order _order;
		public virtual Order Order
		{
			get
			{
				return this._order;
			}
			set
			{
				this._order = value;
			}
		}
		
		private Product _product;
		public virtual Product Product
		{
			get
			{
				return this._product;
			}
			set
			{
				this._product = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Group
	{
		private int _groupId;
		public virtual int GroupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				this._groupId = value;
			}
		}
		
		private string _name;
		public virtual string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		
		private IList<User> _users = new List<User>();
		public virtual IList<User> Users
		{
			get
			{
				return this._users;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Employee
	{
		private int _employeeID;
		public virtual int EmployeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				this._employeeID = value;
			}
		}
		
		private string _lastName;
		public virtual string LastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				this._lastName = value;
			}
		}
		
		private string _firstName;
		public virtual string FirstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				this._firstName = value;
			}
		}
		
		private string _title;
		public virtual string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				this._title = value;
			}
		}
		
		private string _titleOfCourtesy;
		public virtual string TitleOfCourtesy
		{
			get
			{
				return this._titleOfCourtesy;
			}
			set
			{
				this._titleOfCourtesy = value;
			}
		}
		
		private DateTime? _birthDate;
		public virtual DateTime? BirthDate
		{
			get
			{
				return this._birthDate;
			}
			set
			{
				this._birthDate = value;
			}
		}
		
		private DateTime? _hireDate;
		public virtual DateTime? HireDate
		{
			get
			{
				return this._hireDate;
			}
			set
			{
				this._hireDate = value;
			}
		}
		
		private string _address;
		public virtual string Address
		{
			get
			{
				return this._address;
			}
			set
			{
				this._address = value;
			}
		}
		
		private string _city;
		public virtual string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
			}
		}
		
		private string _region;
		public virtual string Region
		{
			get
			{
				return this._region;
			}
			set
			{
				this._region = value;
			}
		}
		
		private string _postalCode;
		public virtual string PostalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				this._postalCode = value;
			}
		}
		
		private string _country;
		public virtual string Country
		{
			get
			{
				return this._country;
			}
			set
			{
				this._country = value;
			}
		}
		
		private string _homePhone;
		public virtual string HomePhone
		{
			get
			{
				return this._homePhone;
			}
			set
			{
				this._homePhone = value;
			}
		}
		
		private string _extension;
		public virtual string Extension
		{
			get
			{
				return this._extension;
			}
			set
			{
				this._extension = value;
			}
		}
		
		private byte[] _photo;
		public virtual byte[] Photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				this._photo = value;
			}
		}
		
		private string _notes;
		public virtual string Notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				this._notes = value;
			}
		}
		
		private int? _reportsTo;
		public virtual int? ReportsTo
		{
			get
			{
				return this._reportsTo;
			}
			set
			{
				this._reportsTo = value;
			}
		}
		
		private string _photoPath;
		public virtual string PhotoPath
		{
			get
			{
				return this._photoPath;
			}
			set
			{
				this._photoPath = value;
			}
		}
		
		private IList<WorkHour> _workHours = new List<WorkHour>();
		public virtual IList<WorkHour> WorkHours
		{
			get
			{
				return this._workHours;
			}
		}
		
		private IList<Order> _orders = new List<Order>();
		public virtual IList<Order> Orders
		{
			get
			{
				return this._orders;
			}
		}
		
		private Employee _employee1;
		public virtual Employee Employee1
		{
			get
			{
				return this._employee1;
			}
			set
			{
				this._employee1 = value;
			}
		}
		
		private IList<Employee> _employees = new List<Employee>();
		public virtual IList<Employee> Employees
		{
			get
			{
				return this._employees;
			}
		}
		
		private IList<Territory> _territories = new List<Territory>();
		public virtual IList<Territory> Territories
		{
			get
			{
				return this._territories;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Customer
	{
		private string _customerID;
		public virtual string CustomerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				this._customerID = value;
			}
		}
		
		private string _companyName;
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				this._companyName = value;
			}
		}
		
		private string _contactName;
		public virtual string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				this._contactName = value;
			}
		}
		
		private string _contactTitle;
		public virtual string ContactTitle
		{
			get
			{
				return this._contactTitle;
			}
			set
			{
				this._contactTitle = value;
			}
		}
		
		private string _address;
		public virtual string Address
		{
			get
			{
				return this._address;
			}
			set
			{
				this._address = value;
			}
		}
		
		private string _city;
		public virtual string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
			}
		}
		
		private string _region;
		public virtual string Region
		{
			get
			{
				return this._region;
			}
			set
			{
				this._region = value;
			}
		}
		
		private string _postalCode;
		public virtual string PostalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				this._postalCode = value;
			}
		}
		
		private string _country;
		public virtual string Country
		{
			get
			{
				return this._country;
			}
			set
			{
				this._country = value;
			}
		}
		
		private string _phone;
		public virtual string Phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				this._phone = value;
			}
		}
		
		private string _fax;
		public virtual string Fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				this._fax = value;
			}
		}
		
		private IList<Order> _orders = new List<Order>();
		public virtual IList<Order> Orders
		{
			get
			{
				return this._orders;
			}
		}
		
		private IList<CustomerDemographic> _customerDemographics = new List<CustomerDemographic>();
		public virtual IList<CustomerDemographic> CustomerDemographics
		{
			get
			{
				return this._customerDemographics;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class CustomerDemographic
	{
		private string _customerTypeID;
		public virtual string CustomerTypeID
		{
			get
			{
				return this._customerTypeID;
			}
			set
			{
				this._customerTypeID = value;
			}
		}
		
		private string _customerDesc;
		public virtual string CustomerDesc
		{
			get
			{
				return this._customerDesc;
			}
			set
			{
				this._customerDesc = value;
			}
		}
		
		private IList<Customer> _customers = new List<Customer>();
		public virtual IList<Customer> Customers
		{
			get
			{
				return this._customers;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Category
	{
		private int _categoryID;
		public virtual int CategoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				this._categoryID = value;
			}
		}
		
		private string _categoryName;
		public virtual string CategoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				this._categoryName = value;
			}
		}
		
		private string _description;
		public virtual string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				this._description = value;
			}
		}
		
		private byte[] _picture;
		public virtual byte[] Picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				this._picture = value;
			}
		}
		
		private IList<Product> _products = new List<Product>();
		public virtual IList<Product> Products
		{
			get
			{
				return this._products;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class SummaryOfSalesByYear
	{
		private DateTime? _shippedDate;
		public virtual DateTime? ShippedDate
		{
			get
			{
				return this._shippedDate;
			}
			set
			{
				this._shippedDate = value;
			}
		}
		
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private decimal? _subtotal;
		public virtual decimal? Subtotal
		{
			get
			{
				return this._subtotal;
			}
			set
			{
				this._subtotal = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class SummaryOfSalesByQuarter
	{
		private DateTime? _shippedDate;
		public virtual DateTime? ShippedDate
		{
			get
			{
				return this._shippedDate;
			}
			set
			{
				this._shippedDate = value;
			}
		}
		
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private decimal? _subtotal;
		public virtual decimal? Subtotal
		{
			get
			{
				return this._subtotal;
			}
			set
			{
				this._subtotal = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class SalesTotalsByAmount
	{
		private decimal? _saleAmount;
		public virtual decimal? SaleAmount
		{
			get
			{
				return this._saleAmount;
			}
			set
			{
				this._saleAmount = value;
			}
		}
		
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private string _companyName;
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				this._companyName = value;
			}
		}
		
		private DateTime? _shippedDate;
		public virtual DateTime? ShippedDate
		{
			get
			{
				return this._shippedDate;
			}
			set
			{
				this._shippedDate = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class SalesByCategory
	{
		private int _categoryID;
		public virtual int CategoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				this._categoryID = value;
			}
		}
		
		private string _categoryName;
		public virtual string CategoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				this._categoryName = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private decimal? _productSales;
		public virtual decimal? ProductSales
		{
			get
			{
				return this._productSales;
			}
			set
			{
				this._productSales = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class QuarterlyOrder
	{
		private string _customerID;
		public virtual string CustomerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				this._customerID = value;
			}
		}
		
		private string _companyName;
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				this._companyName = value;
			}
		}
		
		private string _city;
		public virtual string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
			}
		}
		
		private string _country;
		public virtual string Country
		{
			get
			{
				return this._country;
			}
			set
			{
				this._country = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class ProductsByCategory
	{
		private string _categoryName;
		public virtual string CategoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				this._categoryName = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private string _quantityPerUnit;
		public virtual string QuantityPerUnit
		{
			get
			{
				return this._quantityPerUnit;
			}
			set
			{
				this._quantityPerUnit = value;
			}
		}
		
		private short? _unitsInStock;
		public virtual short? UnitsInStock
		{
			get
			{
				return this._unitsInStock;
			}
			set
			{
				this._unitsInStock = value;
			}
		}
		
		private bool _discontinued;
		public virtual bool Discontinued
		{
			get
			{
				return this._discontinued;
			}
			set
			{
				this._discontinued = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class ProductsAboveAveragePrice
	{
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private decimal? _unitPrice;
		public virtual decimal? UnitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				this._unitPrice = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class ProductSalesFor1997
	{
		private string _categoryName;
		public virtual string CategoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				this._categoryName = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private decimal? _productSales;
		public virtual decimal? ProductSales
		{
			get
			{
				return this._productSales;
			}
			set
			{
				this._productSales = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class OrdersQry
	{
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private string _customerID;
		public virtual string CustomerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				this._customerID = value;
			}
		}
		
		private int? _employeeID;
		public virtual int? EmployeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				this._employeeID = value;
			}
		}
		
		private DateTime? _orderDate;
		public virtual DateTime? OrderDate
		{
			get
			{
				return this._orderDate;
			}
			set
			{
				this._orderDate = value;
			}
		}
		
		private DateTime? _requiredDate;
		public virtual DateTime? RequiredDate
		{
			get
			{
				return this._requiredDate;
			}
			set
			{
				this._requiredDate = value;
			}
		}
		
		private DateTime? _shippedDate;
		public virtual DateTime? ShippedDate
		{
			get
			{
				return this._shippedDate;
			}
			set
			{
				this._shippedDate = value;
			}
		}
		
		private int? _shipVia;
		public virtual int? ShipVia
		{
			get
			{
				return this._shipVia;
			}
			set
			{
				this._shipVia = value;
			}
		}
		
		private decimal? _freight;
		public virtual decimal? Freight
		{
			get
			{
				return this._freight;
			}
			set
			{
				this._freight = value;
			}
		}
		
		private string _shipName;
		public virtual string ShipName
		{
			get
			{
				return this._shipName;
			}
			set
			{
				this._shipName = value;
			}
		}
		
		private string _shipAddress;
		public virtual string ShipAddress
		{
			get
			{
				return this._shipAddress;
			}
			set
			{
				this._shipAddress = value;
			}
		}
		
		private string _shipCity;
		public virtual string ShipCity
		{
			get
			{
				return this._shipCity;
			}
			set
			{
				this._shipCity = value;
			}
		}
		
		private string _shipRegion;
		public virtual string ShipRegion
		{
			get
			{
				return this._shipRegion;
			}
			set
			{
				this._shipRegion = value;
			}
		}
		
		private string _shipPostalCode;
		public virtual string ShipPostalCode
		{
			get
			{
				return this._shipPostalCode;
			}
			set
			{
				this._shipPostalCode = value;
			}
		}
		
		private string _shipCountry;
		public virtual string ShipCountry
		{
			get
			{
				return this._shipCountry;
			}
			set
			{
				this._shipCountry = value;
			}
		}
		
		private string _companyName;
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				this._companyName = value;
			}
		}
		
		private string _address;
		public virtual string Address
		{
			get
			{
				return this._address;
			}
			set
			{
				this._address = value;
			}
		}
		
		private string _city;
		public virtual string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
			}
		}
		
		private string _region;
		public virtual string Region
		{
			get
			{
				return this._region;
			}
			set
			{
				this._region = value;
			}
		}
		
		private string _postalCode;
		public virtual string PostalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				this._postalCode = value;
			}
		}
		
		private string _country;
		public virtual string Country
		{
			get
			{
				return this._country;
			}
			set
			{
				this._country = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class OrderSubtotal
	{
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private decimal? _subtotal;
		public virtual decimal? Subtotal
		{
			get
			{
				return this._subtotal;
			}
			set
			{
				this._subtotal = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class OrderDetailsExtended
	{
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private int _productID;
		public virtual int ProductID
		{
			get
			{
				return this._productID;
			}
			set
			{
				this._productID = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private decimal _unitPrice;
		public virtual decimal UnitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				this._unitPrice = value;
			}
		}
		
		private short _quantity;
		public virtual short Quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				this._quantity = value;
			}
		}
		
		private float _discount;
		public virtual float Discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				this._discount = value;
			}
		}
		
		private decimal? _extendedPrice;
		public virtual decimal? ExtendedPrice
		{
			get
			{
				return this._extendedPrice;
			}
			set
			{
				this._extendedPrice = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class Invoice
	{
		private string _shipName;
		public virtual string ShipName
		{
			get
			{
				return this._shipName;
			}
			set
			{
				this._shipName = value;
			}
		}
		
		private string _shipAddress;
		public virtual string ShipAddress
		{
			get
			{
				return this._shipAddress;
			}
			set
			{
				this._shipAddress = value;
			}
		}
		
		private string _shipCity;
		public virtual string ShipCity
		{
			get
			{
				return this._shipCity;
			}
			set
			{
				this._shipCity = value;
			}
		}
		
		private string _shipRegion;
		public virtual string ShipRegion
		{
			get
			{
				return this._shipRegion;
			}
			set
			{
				this._shipRegion = value;
			}
		}
		
		private string _shipPostalCode;
		public virtual string ShipPostalCode
		{
			get
			{
				return this._shipPostalCode;
			}
			set
			{
				this._shipPostalCode = value;
			}
		}
		
		private string _shipCountry;
		public virtual string ShipCountry
		{
			get
			{
				return this._shipCountry;
			}
			set
			{
				this._shipCountry = value;
			}
		}
		
		private string _customerID;
		public virtual string CustomerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				this._customerID = value;
			}
		}
		
		private string _customerName;
		public virtual string CustomerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				this._customerName = value;
			}
		}
		
		private string _address;
		public virtual string Address
		{
			get
			{
				return this._address;
			}
			set
			{
				this._address = value;
			}
		}
		
		private string _city;
		public virtual string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
			}
		}
		
		private string _region;
		public virtual string Region
		{
			get
			{
				return this._region;
			}
			set
			{
				this._region = value;
			}
		}
		
		private string _postalCode;
		public virtual string PostalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				this._postalCode = value;
			}
		}
		
		private string _country;
		public virtual string Country
		{
			get
			{
				return this._country;
			}
			set
			{
				this._country = value;
			}
		}
		
		private string _salesperson;
		public virtual string Salesperson
		{
			get
			{
				return this._salesperson;
			}
			set
			{
				this._salesperson = value;
			}
		}
		
		private int _orderID;
		public virtual int OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private DateTime? _orderDate;
		public virtual DateTime? OrderDate
		{
			get
			{
				return this._orderDate;
			}
			set
			{
				this._orderDate = value;
			}
		}
		
		private DateTime? _requiredDate;
		public virtual DateTime? RequiredDate
		{
			get
			{
				return this._requiredDate;
			}
			set
			{
				this._requiredDate = value;
			}
		}
		
		private DateTime? _shippedDate;
		public virtual DateTime? ShippedDate
		{
			get
			{
				return this._shippedDate;
			}
			set
			{
				this._shippedDate = value;
			}
		}
		
		private string _shipperName;
		public virtual string ShipperName
		{
			get
			{
				return this._shipperName;
			}
			set
			{
				this._shipperName = value;
			}
		}
		
		private int _productID;
		public virtual int ProductID
		{
			get
			{
				return this._productID;
			}
			set
			{
				this._productID = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private decimal _unitPrice;
		public virtual decimal UnitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				this._unitPrice = value;
			}
		}
		
		private short _quantity;
		public virtual short Quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				this._quantity = value;
			}
		}
		
		private float _discount;
		public virtual float Discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				this._discount = value;
			}
		}
		
		private decimal? _extendedPrice;
		public virtual decimal? ExtendedPrice
		{
			get
			{
				return this._extendedPrice;
			}
			set
			{
				this._extendedPrice = value;
			}
		}
		
		private decimal? _freight;
		public virtual decimal? Freight
		{
			get
			{
				return this._freight;
			}
			set
			{
				this._freight = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class CustomerAndSuppliersByCity
	{
		private string _city;
		public virtual string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
			}
		}
		
		private string _companyName;
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				this._companyName = value;
			}
		}
		
		private string _contactName;
		public virtual string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				this._contactName = value;
			}
		}
		
		private string _relationship;
		public virtual string Relationship
		{
			get
			{
				return this._relationship;
			}
			set
			{
				this._relationship = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class CurrentProductList
	{
		private int _productID;
		public virtual int ProductID
		{
			get
			{
				return this._productID;
			}
			set
			{
				this._productID = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class CategorySalesFor1997
	{
		private string _categoryName;
		public virtual string CategoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				this._categoryName = value;
			}
		}
		
		private decimal? _categorySales;
		public virtual decimal? CategorySales
		{
			get
			{
				return this._categorySales;
			}
			set
			{
				this._categorySales = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel	
{
	public partial class AlphabeticalListOfProduct
	{
		private int _productID;
		public virtual int ProductID
		{
			get
			{
				return this._productID;
			}
			set
			{
				this._productID = value;
			}
		}
		
		private string _productName;
		public virtual string ProductName
		{
			get
			{
				return this._productName;
			}
			set
			{
				this._productName = value;
			}
		}
		
		private int? _supplierID;
		public virtual int? SupplierID
		{
			get
			{
				return this._supplierID;
			}
			set
			{
				this._supplierID = value;
			}
		}
		
		private int? _categoryID;
		public virtual int? CategoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				this._categoryID = value;
			}
		}
		
		private string _quantityPerUnit;
		public virtual string QuantityPerUnit
		{
			get
			{
				return this._quantityPerUnit;
			}
			set
			{
				this._quantityPerUnit = value;
			}
		}
		
		private decimal? _unitPrice;
		public virtual decimal? UnitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				this._unitPrice = value;
			}
		}
		
		private short? _unitsInStock;
		public virtual short? UnitsInStock
		{
			get
			{
				return this._unitsInStock;
			}
			set
			{
				this._unitsInStock = value;
			}
		}
		
		private short? _unitsOnOrder;
		public virtual short? UnitsOnOrder
		{
			get
			{
				return this._unitsOnOrder;
			}
			set
			{
				this._unitsOnOrder = value;
			}
		}
		
		private short? _reorderLevel;
		public virtual short? ReorderLevel
		{
			get
			{
				return this._reorderLevel;
			}
			set
			{
				this._reorderLevel = value;
			}
		}
		
		private bool _discontinued;
		public virtual bool Discontinued
		{
			get
			{
				return this._discontinued;
			}
			set
			{
				this._discontinued = value;
			}
		}
		
		private string _categoryName;
		public virtual string CategoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				this._categoryName = value;
			}
		}
		
	}
}
namespace NorthwindEntitiesModel
{

	public partial class NorthwindFluentModelMetadataSource : FluentMetadataSource
	{
		
		protected override IList<MappingConfiguration> PrepareMapping()
		{
			List<MappingConfiguration> mappingConfigurations = new List<MappingConfiguration>();
			
			MappingConfiguration<WorkHoursLog> workhourslogConfiguration = this.GetWorkHoursLogMappingConfiguration();
			mappingConfigurations.Add(workhourslogConfiguration);
			
			MappingConfiguration<WorkHour> workhourConfiguration = this.GetWorkHourMappingConfiguration();
			mappingConfigurations.Add(workhourConfiguration);
			
			MappingConfiguration<User> userConfiguration = this.GetUserMappingConfiguration();
			mappingConfigurations.Add(userConfiguration);
			
			MappingConfiguration<Territory> territoryConfiguration = this.GetTerritoryMappingConfiguration();
			mappingConfigurations.Add(territoryConfiguration);
			
			MappingConfiguration<Supplier> supplierConfiguration = this.GetSupplierMappingConfiguration();
			mappingConfigurations.Add(supplierConfiguration);
			
			MappingConfiguration<Shipper> shipperConfiguration = this.GetShipperMappingConfiguration();
			mappingConfigurations.Add(shipperConfiguration);
			
			MappingConfiguration<Region> regionConfiguration = this.GetRegionMappingConfiguration();
			mappingConfigurations.Add(regionConfiguration);
			
			MappingConfiguration<Product> productConfiguration = this.GetProductMappingConfiguration();
			mappingConfigurations.Add(productConfiguration);
			
			MappingConfiguration<Order> orderConfiguration = this.GetOrderMappingConfiguration();
			mappingConfigurations.Add(orderConfiguration);
			
			MappingConfiguration<OrderDetail> orderdetailConfiguration = this.GetOrderDetailMappingConfiguration();
			mappingConfigurations.Add(orderdetailConfiguration);
			
			MappingConfiguration<Group> groupConfiguration = this.GetGroupMappingConfiguration();
			mappingConfigurations.Add(groupConfiguration);
			
			MappingConfiguration<Employee> employeeConfiguration = this.GetEmployeeMappingConfiguration();
			mappingConfigurations.Add(employeeConfiguration);
			
			MappingConfiguration<Customer> customerConfiguration = this.GetCustomerMappingConfiguration();
			mappingConfigurations.Add(customerConfiguration);
			
			MappingConfiguration<CustomerDemographic> customerdemographicConfiguration = this.GetCustomerDemographicMappingConfiguration();
			mappingConfigurations.Add(customerdemographicConfiguration);
			
			MappingConfiguration<Category> categoryConfiguration = this.GetCategoryMappingConfiguration();
			mappingConfigurations.Add(categoryConfiguration);
			
			MappingConfiguration<SummaryOfSalesByYear> summaryofsalesbyyearConfiguration = this.GetSummaryOfSalesByYearMappingConfiguration();
			mappingConfigurations.Add(summaryofsalesbyyearConfiguration);
			
			MappingConfiguration<SummaryOfSalesByQuarter> summaryofsalesbyquarterConfiguration = this.GetSummaryOfSalesByQuarterMappingConfiguration();
			mappingConfigurations.Add(summaryofsalesbyquarterConfiguration);
			
			MappingConfiguration<SalesTotalsByAmount> salestotalsbyamountConfiguration = this.GetSalesTotalsByAmountMappingConfiguration();
			mappingConfigurations.Add(salestotalsbyamountConfiguration);
			
			MappingConfiguration<SalesByCategory> salesbycategoryConfiguration = this.GetSalesByCategoryMappingConfiguration();
			mappingConfigurations.Add(salesbycategoryConfiguration);
			
			MappingConfiguration<QuarterlyOrder> quarterlyorderConfiguration = this.GetQuarterlyOrderMappingConfiguration();
			mappingConfigurations.Add(quarterlyorderConfiguration);
			
			MappingConfiguration<ProductsByCategory> productsbycategoryConfiguration = this.GetProductsByCategoryMappingConfiguration();
			mappingConfigurations.Add(productsbycategoryConfiguration);
			
			MappingConfiguration<ProductsAboveAveragePrice> productsaboveaveragepriceConfiguration = this.GetProductsAboveAveragePriceMappingConfiguration();
			mappingConfigurations.Add(productsaboveaveragepriceConfiguration);
			
			MappingConfiguration<ProductSalesFor1997> productsalesfor1997Configuration = this.GetProductSalesFor1997MappingConfiguration();
			mappingConfigurations.Add(productsalesfor1997Configuration);
			
			MappingConfiguration<OrdersQry> ordersqryConfiguration = this.GetOrdersQryMappingConfiguration();
			mappingConfigurations.Add(ordersqryConfiguration);
			
			MappingConfiguration<OrderSubtotal> ordersubtotalConfiguration = this.GetOrderSubtotalMappingConfiguration();
			mappingConfigurations.Add(ordersubtotalConfiguration);
			
			MappingConfiguration<OrderDetailsExtended> orderdetailsextendedConfiguration = this.GetOrderDetailsExtendedMappingConfiguration();
			mappingConfigurations.Add(orderdetailsextendedConfiguration);
			
			MappingConfiguration<Invoice> invoiceConfiguration = this.GetInvoiceMappingConfiguration();
			mappingConfigurations.Add(invoiceConfiguration);
			
			MappingConfiguration<CustomerAndSuppliersByCity> customerandsuppliersbycityConfiguration = this.GetCustomerAndSuppliersByCityMappingConfiguration();
			mappingConfigurations.Add(customerandsuppliersbycityConfiguration);
			
			MappingConfiguration<CurrentProductList> currentproductlistConfiguration = this.GetCurrentProductListMappingConfiguration();
			mappingConfigurations.Add(currentproductlistConfiguration);
			
			MappingConfiguration<CategorySalesFor1997> categorysalesfor1997Configuration = this.GetCategorySalesFor1997MappingConfiguration();
			mappingConfigurations.Add(categorysalesfor1997Configuration);
			
			MappingConfiguration<AlphabeticalListOfProduct> alphabeticallistofproductConfiguration = this.GetAlphabeticalListOfProductMappingConfiguration();
			mappingConfigurations.Add(alphabeticallistofproductConfiguration);
			
			return mappingConfigurations;
		}
		
		protected override void SetContainerSettings(MetadataContainer container)
		{
			container.Name = "NorthwindFluentModel";
			container.DefaultNamespace = "NorthwindEntitiesModel";
			container.NameGenerator.RemoveCamelCase = false;
			container.NameGenerator.SourceStrategy = Telerik.OpenAccess.Metadata.NamingSourceStrategy.Property;
		}
		public MappingConfiguration<WorkHoursLog> GetWorkHoursLogMappingConfiguration()
		{
			MappingConfiguration<WorkHoursLog> configuration = this.GetWorkHoursLogClassConfiguration();
			this.PrepareWorkHoursLogPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<WorkHoursLog> GetWorkHoursLogClassConfiguration()
		{
			MappingConfiguration<WorkHoursLog> configuration = new MappingConfiguration<WorkHoursLog>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("WorkHoursLogs");
		
			return configuration;
		}
	
		public void PrepareWorkHoursLogPropertyConfigurations(MappingConfiguration<WorkHoursLog> configuration)
		{
			configuration.HasProperty(x => x.LogId).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_logId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("LogId").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Command).HasFieldName("_command").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Command").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.OldRecord).HasFieldName("_oldRecord").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OldRecord").IsNullable().HasColumnType("nvarchar").HasLength(255);
			configuration.HasProperty(x => x.NewRecord).HasFieldName("_newRecord").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("NewRecord").IsNullable().HasColumnType("nvarchar").HasLength(255);
		}
		public MappingConfiguration<WorkHour> GetWorkHourMappingConfiguration()
		{
			MappingConfiguration<WorkHour> configuration = this.GetWorkHourClassConfiguration();
			this.PrepareWorkHourPropertyConfigurations(configuration);
			this.PrepareWorkHourAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<WorkHour> GetWorkHourClassConfiguration()
		{
			MappingConfiguration<WorkHour> configuration = new MappingConfiguration<WorkHour>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("WorkHours");
		
			return configuration;
		}
	
		public void PrepareWorkHourPropertyConfigurations(MappingConfiguration<WorkHour> configuration)
		{
			configuration.HasProperty(x => x.WorkHourId).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_workHourId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("WorkHourId").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.EmployeeId).HasFieldName("_employeeId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EmployeeId").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.WorkDate).HasFieldName("_workDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("WorkDate").IsNotNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.Task).HasFieldName("_task").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Task").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.WorkHours).HasFieldName("_workHours").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("WorkHours").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Comments).HasFieldName("_comments").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Comments").IsNullable().HasColumnType("nvarchar").HasLength(100);
		}
	
		public void PrepareWorkHourAssociationConfigurations(MappingConfiguration<WorkHour> configuration)
		{
			configuration.HasAssociation(x => x.Employee).HasFieldName("_employee").WithOpposite(x => x.WorkHours).ToColumn("EmployeeId").HasConstraint((x, y) =>  x.EmployeeId == y.EmployeeID ).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<User> GetUserMappingConfiguration()
		{
			MappingConfiguration<User> configuration = this.GetUserClassConfiguration();
			this.PrepareUserPropertyConfigurations(configuration);
			this.PrepareUserAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<User> GetUserClassConfiguration()
		{
			MappingConfiguration<User> configuration = new MappingConfiguration<User>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Users");
		
			return configuration;
		}
	
		public void PrepareUserPropertyConfigurations(MappingConfiguration<User> configuration)
		{
			configuration.HasProperty(x => x.UserId).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_userId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UserId").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Username).HasFieldName("_username").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Username").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.GroupId).HasFieldName("_groupId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("GroupId").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.FullName).HasFieldName("_fullName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FullName").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.Password).HasFieldName("_password").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Password").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
		}
	
		public void PrepareUserAssociationConfigurations(MappingConfiguration<User> configuration)
		{
			configuration.HasAssociation(x => x.Group).HasFieldName("_group").WithOpposite(x => x.Users).ToColumn("GroupId").HasConstraint((x, y) =>  x.GroupId == y.GroupId ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Territory> GetTerritoryMappingConfiguration()
		{
			MappingConfiguration<Territory> configuration = this.GetTerritoryClassConfiguration();
			this.PrepareTerritoryPropertyConfigurations(configuration);
			this.PrepareTerritoryAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Territory> GetTerritoryClassConfiguration()
		{
			MappingConfiguration<Territory> configuration = new MappingConfiguration<Territory>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Territories");
		
			return configuration;
		}
	
		public void PrepareTerritoryPropertyConfigurations(MappingConfiguration<Territory> configuration)
		{
			configuration.HasProperty(x => x.TerritoryID).IsIdentity().HasFieldName("_territoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryID").IsNotNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.TerritoryDescription).HasFieldName("_territoryDescription").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryDescription").IsNotNullable().HasColumnType("nchar").HasLength(50);
			configuration.HasProperty(x => x.RegionID).HasFieldName("_regionID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RegionID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareTerritoryAssociationConfigurations(MappingConfiguration<Territory> configuration)
		{
			configuration.HasAssociation(x => x.Region).HasFieldName("_region").WithOpposite(x => x.Territories).ToColumn("RegionID").HasConstraint((x, y) =>  x.RegionID == y.RegionID ).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Employees).HasFieldName("_employees").WithOpposite(x => x.Territories).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Supplier> GetSupplierMappingConfiguration()
		{
			MappingConfiguration<Supplier> configuration = this.GetSupplierClassConfiguration();
			this.PrepareSupplierPropertyConfigurations(configuration);
			this.PrepareSupplierAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Supplier> GetSupplierClassConfiguration()
		{
			MappingConfiguration<Supplier> configuration = new MappingConfiguration<Supplier>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Suppliers");
		
			return configuration;
		}
	
		public void PrepareSupplierPropertyConfigurations(MappingConfiguration<Supplier> configuration)
		{
			configuration.HasProperty(x => x.SupplierID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_supplierID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SupplierID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CompanyName).HasFieldName("_companyName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CompanyName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ContactName).HasFieldName("_contactName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactName").IsNullable().HasColumnType("nvarchar").HasLength(30);
			configuration.HasProperty(x => x.ContactTitle).HasFieldName("_contactTitle").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactTitle").IsNullable().HasColumnType("nvarchar").HasLength(30);
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Address").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Region).HasFieldName("_region").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Region").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.PostalCode).HasFieldName("_postalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.Country).HasFieldName("_country").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Country").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Phone).HasFieldName("_phone").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Phone").IsNullable().HasColumnType("nvarchar").HasLength(24);
			configuration.HasProperty(x => x.Fax).HasFieldName("_fax").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Fax").IsNullable().HasColumnType("nvarchar").HasLength(24);
			configuration.HasProperty(x => x.HomePage).HasFieldName("_homePage").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("HomePage").IsNullable().HasColumnType("ntext").HasLength(0);
		}
	
		public void PrepareSupplierAssociationConfigurations(MappingConfiguration<Supplier> configuration)
		{
			configuration.HasAssociation(x => x.Products).HasFieldName("_products").WithOpposite(x => x.Supplier).ToColumn("SupplierID").HasConstraint((y, x) =>  x.SupplierID == y.SupplierID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Shipper> GetShipperMappingConfiguration()
		{
			MappingConfiguration<Shipper> configuration = this.GetShipperClassConfiguration();
			this.PrepareShipperPropertyConfigurations(configuration);
			this.PrepareShipperAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Shipper> GetShipperClassConfiguration()
		{
			MappingConfiguration<Shipper> configuration = new MappingConfiguration<Shipper>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Shippers");
		
			return configuration;
		}
	
		public void PrepareShipperPropertyConfigurations(MappingConfiguration<Shipper> configuration)
		{
			configuration.HasProperty(x => x.ShipperID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_shipperID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipperID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CompanyName).HasFieldName("_companyName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CompanyName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.Phone).HasFieldName("_phone").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Phone").IsNullable().HasColumnType("nvarchar").HasLength(24);
		}
	
		public void PrepareShipperAssociationConfigurations(MappingConfiguration<Shipper> configuration)
		{
			configuration.HasAssociation(x => x.Orders).HasFieldName("_orders").WithOpposite(x => x.Shipper).ToColumn("ShipVia").HasConstraint((y, x) =>  x.ShipVia == y.ShipperID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Region> GetRegionMappingConfiguration()
		{
			MappingConfiguration<Region> configuration = this.GetRegionClassConfiguration();
			this.PrepareRegionPropertyConfigurations(configuration);
			this.PrepareRegionAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Region> GetRegionClassConfiguration()
		{
			MappingConfiguration<Region> configuration = new MappingConfiguration<Region>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Region");
		
			return configuration;
		}
	
		public void PrepareRegionPropertyConfigurations(MappingConfiguration<Region> configuration)
		{
			configuration.HasProperty(x => x.RegionID).IsIdentity().HasFieldName("_regionID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RegionID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RegionDescription).HasFieldName("_regionDescription").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RegionDescription").IsNotNullable().HasColumnType("nchar").HasLength(50);
		}
	
		public void PrepareRegionAssociationConfigurations(MappingConfiguration<Region> configuration)
		{
			configuration.HasAssociation(x => x.Territories).HasFieldName("_territories").WithOpposite(x => x.Region).ToColumn("RegionID").HasConstraint((y, x) =>  x.RegionID == y.RegionID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Product> GetProductMappingConfiguration()
		{
			MappingConfiguration<Product> configuration = this.GetProductClassConfiguration();
			this.PrepareProductPropertyConfigurations(configuration);
			this.PrepareProductAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Product> GetProductClassConfiguration()
		{
			MappingConfiguration<Product> configuration = new MappingConfiguration<Product>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Products");
		
			return configuration;
		}
	
		public void PrepareProductPropertyConfigurations(MappingConfiguration<Product> configuration)
		{
			configuration.HasProperty(x => x.ProductID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.SupplierID).HasFieldName("_supplierID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SupplierID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CategoryID).HasFieldName("_categoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.QuantityPerUnit).HasFieldName("_quantityPerUnit").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("QuantityPerUnit").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitsInStock).HasFieldName("_unitsInStock").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitsInStock").IsNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitsOnOrder).HasFieldName("_unitsOnOrder").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitsOnOrder").IsNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ReorderLevel).HasFieldName("_reorderLevel").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ReorderLevel").IsNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Discontinued).HasFieldName("_discontinued").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Discontinued").IsNotNullable().HasColumnType("bit").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareProductAssociationConfigurations(MappingConfiguration<Product> configuration)
		{
			configuration.HasAssociation(x => x.Category).HasFieldName("_category").WithOpposite(x => x.Products).ToColumn("CategoryID").HasConstraint((x, y) =>  x.CategoryID == y.CategoryID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Supplier).HasFieldName("_supplier").WithOpposite(x => x.Products).ToColumn("SupplierID").HasConstraint((x, y) =>  x.SupplierID == y.SupplierID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.OrderDetails).HasFieldName("_orderDetails").WithOpposite(x => x.Product).ToColumn("ProductID").HasConstraint((y, x) =>  x.ProductID == y.ProductID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Order> GetOrderMappingConfiguration()
		{
			MappingConfiguration<Order> configuration = this.GetOrderClassConfiguration();
			this.PrepareOrderPropertyConfigurations(configuration);
			this.PrepareOrderAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Order> GetOrderClassConfiguration()
		{
			MappingConfiguration<Order> configuration = new MappingConfiguration<Order>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Orders");
		
			return configuration;
		}
	
		public void PrepareOrderPropertyConfigurations(MappingConfiguration<Order> configuration)
		{
			configuration.HasProperty(x => x.OrderID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNullable().HasColumnType("nchar").HasLength(5);
			configuration.HasProperty(x => x.EmployeeID).HasFieldName("_employeeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EmployeeID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrderDate).HasFieldName("_orderDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.RequiredDate).HasFieldName("_requiredDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RequiredDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.ShippedDate).HasFieldName("_shippedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShippedDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.ShipVia).HasFieldName("_shipVia").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipVia").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Freight).HasFieldName("_freight").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Freight").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ShipName).HasFieldName("_shipName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipName").IsNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ShipAddress).HasFieldName("_shipAddress").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipAddress").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.ShipCity).HasFieldName("_shipCity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipCity").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ShipRegion).HasFieldName("_shipRegion").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipRegion").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ShipPostalCode).HasFieldName("_shipPostalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipPostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.ShipCountry).HasFieldName("_shipCountry").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipCountry").IsNullable().HasColumnType("nvarchar").HasLength(15);
		}
	
		public void PrepareOrderAssociationConfigurations(MappingConfiguration<Order> configuration)
		{
			configuration.HasAssociation(x => x.Customer).HasFieldName("_customer").WithOpposite(x => x.Orders).ToColumn("CustomerID").HasConstraint((x, y) =>  x.CustomerID == y.CustomerID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Employee).HasFieldName("_employee").WithOpposite(x => x.Orders).ToColumn("EmployeeID").HasConstraint((x, y) =>  x.EmployeeID == y.EmployeeID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Shipper).HasFieldName("_shipper").WithOpposite(x => x.Orders).ToColumn("ShipVia").HasConstraint((x, y) =>  x.ShipVia == y.ShipperID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.OrderDetails).HasFieldName("_orderDetails").WithOpposite(x => x.Order).ToColumn("OrderID").HasConstraint((y, x) =>  x.OrderID == y.OrderID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<OrderDetail> GetOrderDetailMappingConfiguration()
		{
			MappingConfiguration<OrderDetail> configuration = this.GetOrderDetailClassConfiguration();
			this.PrepareOrderDetailPropertyConfigurations(configuration);
			this.PrepareOrderDetailAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<OrderDetail> GetOrderDetailClassConfiguration()
		{
			MappingConfiguration<OrderDetail> configuration = new MappingConfiguration<OrderDetail>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Order Details");
		
			return configuration;
		}
	
		public void PrepareOrderDetailPropertyConfigurations(MappingConfiguration<OrderDetail> configuration)
		{
			configuration.HasProperty(x => x.OrderID).IsIdentity().HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductID).IsIdentity().HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Quantity).HasFieldName("_quantity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Quantity").IsNotNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Discount).HasFieldName("_discount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Discount").IsNotNullable().HasColumnType("real").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareOrderDetailAssociationConfigurations(MappingConfiguration<OrderDetail> configuration)
		{
			configuration.HasAssociation(x => x.Order).HasFieldName("_order").WithOpposite(x => x.OrderDetails).ToColumn("OrderID").HasConstraint((x, y) =>  x.OrderID == y.OrderID ).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Product).HasFieldName("_product").WithOpposite(x => x.OrderDetails).ToColumn("ProductID").HasConstraint((x, y) =>  x.ProductID == y.ProductID ).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Group> GetGroupMappingConfiguration()
		{
			MappingConfiguration<Group> configuration = this.GetGroupClassConfiguration();
			this.PrepareGroupPropertyConfigurations(configuration);
			this.PrepareGroupAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Group> GetGroupClassConfiguration()
		{
			MappingConfiguration<Group> configuration = new MappingConfiguration<Group>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Groups");
		
			return configuration;
		}
	
		public void PrepareGroupPropertyConfigurations(MappingConfiguration<Group> configuration)
		{
			configuration.HasProperty(x => x.GroupId).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_groupId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("GroupId").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
		}
	
		public void PrepareGroupAssociationConfigurations(MappingConfiguration<Group> configuration)
		{
			configuration.HasAssociation(x => x.Users).HasFieldName("_users").WithOpposite(x => x.Group).ToColumn("GroupId").HasConstraint((y, x) =>  x.GroupId == y.GroupId ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Employee> GetEmployeeMappingConfiguration()
		{
			MappingConfiguration<Employee> configuration = this.GetEmployeeClassConfiguration();
			this.PrepareEmployeePropertyConfigurations(configuration);
			this.PrepareEmployeeAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Employee> GetEmployeeClassConfiguration()
		{
			MappingConfiguration<Employee> configuration = new MappingConfiguration<Employee>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Employees");
		
			return configuration;
		}
	
		public void PrepareEmployeePropertyConfigurations(MappingConfiguration<Employee> configuration)
		{
			configuration.HasProperty(x => x.EmployeeID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_employeeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EmployeeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.LastName).HasFieldName("_lastName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("LastName").IsNotNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.FirstName).HasFieldName("_firstName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FirstName").IsNotNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.Title).HasFieldName("_title").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Title").IsNullable().HasColumnType("nvarchar").HasLength(30);
			configuration.HasProperty(x => x.TitleOfCourtesy).HasFieldName("_titleOfCourtesy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TitleOfCourtesy").IsNullable().HasColumnType("nvarchar").HasLength(25);
			configuration.HasProperty(x => x.BirthDate).HasFieldName("_birthDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BirthDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.HireDate).HasFieldName("_hireDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("HireDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Address").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Region).HasFieldName("_region").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Region").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.PostalCode).HasFieldName("_postalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.Country).HasFieldName("_country").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Country").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.HomePhone).HasFieldName("_homePhone").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("HomePhone").IsNullable().HasColumnType("nvarchar").HasLength(24);
			configuration.HasProperty(x => x.Extension).HasFieldName("_extension").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Extension").IsNullable().HasColumnType("nvarchar").HasLength(4);
			configuration.HasProperty(x => x.Photo).HasFieldName("_photo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Photo").IsNullable().HasColumnType("image");
			configuration.HasProperty(x => x.Notes).HasFieldName("_notes").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Notes").IsNullable().HasColumnType("ntext").HasLength(0);
			configuration.HasProperty(x => x.ReportsTo).HasFieldName("_reportsTo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ReportsTo").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PhotoPath).HasFieldName("_photoPath").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PhotoPath").IsNullable().HasColumnType("nvarchar").HasLength(255);
		}
	
		public void PrepareEmployeeAssociationConfigurations(MappingConfiguration<Employee> configuration)
		{
			configuration.HasAssociation(x => x.WorkHours).HasFieldName("_workHours").WithOpposite(x => x.Employee).ToColumn("EmployeeId").HasConstraint((y, x) =>  x.EmployeeId == y.EmployeeID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Orders).HasFieldName("_orders").WithOpposite(x => x.Employee).ToColumn("EmployeeID").HasConstraint((y, x) =>  x.EmployeeID == y.EmployeeID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Employee1).HasFieldName("_employee1").WithOpposite(x => x.Employees).ToColumn("ReportsTo").HasConstraint((x, y) =>  x.ReportsTo == y.EmployeeID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Employees).HasFieldName("_employees").WithOpposite(x => x.Employee1).ToColumn("ReportsTo").HasConstraint((y, x) =>  x.ReportsTo == y.EmployeeID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Territories).HasFieldName("_territories").WithOpposite(x => x.Employees).WithDataAccessKind(DataAccessKind.ReadWrite).MapJoinTable("EmployeeTerritories", (x, y) => new{EmployeeID = x.EmployeeID, TerritoryID = y.TerritoryID}).CreatePrimaryKeyFromForeignKeys();
		}
		
		public MappingConfiguration<Customer> GetCustomerMappingConfiguration()
		{
			MappingConfiguration<Customer> configuration = this.GetCustomerClassConfiguration();
			this.PrepareCustomerPropertyConfigurations(configuration);
			this.PrepareCustomerAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Customer> GetCustomerClassConfiguration()
		{
			MappingConfiguration<Customer> configuration = new MappingConfiguration<Customer>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Customers");
		
			return configuration;
		}
	
		public void PrepareCustomerPropertyConfigurations(MappingConfiguration<Customer> configuration)
		{
			configuration.HasProperty(x => x.CustomerID).IsIdentity().HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNotNullable().HasColumnType("nchar").HasLength(5);
			configuration.HasProperty(x => x.CompanyName).HasFieldName("_companyName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CompanyName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ContactName).HasFieldName("_contactName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactName").IsNullable().HasColumnType("nvarchar").HasLength(30);
			configuration.HasProperty(x => x.ContactTitle).HasFieldName("_contactTitle").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactTitle").IsNullable().HasColumnType("nvarchar").HasLength(30);
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Address").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Region).HasFieldName("_region").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Region").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.PostalCode).HasFieldName("_postalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.Country).HasFieldName("_country").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Country").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Phone).HasFieldName("_phone").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Phone").IsNullable().HasColumnType("nvarchar").HasLength(24);
			configuration.HasProperty(x => x.Fax).HasFieldName("_fax").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Fax").IsNullable().HasColumnType("nvarchar").HasLength(24);
		}
	
		public void PrepareCustomerAssociationConfigurations(MappingConfiguration<Customer> configuration)
		{
			configuration.HasAssociation(x => x.Orders).HasFieldName("_orders").WithOpposite(x => x.Customer).ToColumn("CustomerID").HasConstraint((y, x) =>  x.CustomerID == y.CustomerID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.CustomerDemographics).HasFieldName("_customerDemographics").WithOpposite(x => x.Customers).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<CustomerDemographic> GetCustomerDemographicMappingConfiguration()
		{
			MappingConfiguration<CustomerDemographic> configuration = this.GetCustomerDemographicClassConfiguration();
			this.PrepareCustomerDemographicPropertyConfigurations(configuration);
			this.PrepareCustomerDemographicAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<CustomerDemographic> GetCustomerDemographicClassConfiguration()
		{
			MappingConfiguration<CustomerDemographic> configuration = new MappingConfiguration<CustomerDemographic>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("CustomerDemographics");
		
			return configuration;
		}
	
		public void PrepareCustomerDemographicPropertyConfigurations(MappingConfiguration<CustomerDemographic> configuration)
		{
			configuration.HasProperty(x => x.CustomerTypeID).IsIdentity().HasFieldName("_customerTypeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerTypeID").IsNotNullable().HasColumnType("nchar").HasLength(10);
			configuration.HasProperty(x => x.CustomerDesc).HasFieldName("_customerDesc").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerDesc").IsNullable().HasColumnType("ntext").HasLength(0);
		}
	
		public void PrepareCustomerDemographicAssociationConfigurations(MappingConfiguration<CustomerDemographic> configuration)
		{
			configuration.HasAssociation(x => x.Customers).HasFieldName("_customers").WithOpposite(x => x.CustomerDemographics).WithDataAccessKind(DataAccessKind.ReadWrite).MapJoinTable("CustomerCustomerDemo", (x, y) => new{CustomerTypeID = x.CustomerTypeID, CustomerID = y.CustomerID}).CreatePrimaryKeyFromForeignKeys();
		}
		
		public MappingConfiguration<Category> GetCategoryMappingConfiguration()
		{
			MappingConfiguration<Category> configuration = this.GetCategoryClassConfiguration();
			this.PrepareCategoryPropertyConfigurations(configuration);
			this.PrepareCategoryAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Category> GetCategoryClassConfiguration()
		{
			MappingConfiguration<Category> configuration = new MappingConfiguration<Category>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Categories");
		
			return configuration;
		}
	
		public void PrepareCategoryPropertyConfigurations(MappingConfiguration<Category> configuration)
		{
			configuration.HasProperty(x => x.CategoryID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_categoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CategoryName).HasFieldName("_categoryName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryName").IsNotNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Description).HasFieldName("_description").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Description").IsNullable().HasColumnType("ntext").HasLength(0);
			configuration.HasProperty(x => x.Picture).HasFieldName("_picture").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Picture").IsNullable().HasColumnType("image");
		}
	
		public void PrepareCategoryAssociationConfigurations(MappingConfiguration<Category> configuration)
		{
			configuration.HasAssociation(x => x.Products).HasFieldName("_products").WithOpposite(x => x.Category).ToColumn("CategoryID").HasConstraint((y, x) =>  x.CategoryID == y.CategoryID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<SummaryOfSalesByYear> GetSummaryOfSalesByYearMappingConfiguration()
		{
			MappingConfiguration<SummaryOfSalesByYear> configuration = this.GetSummaryOfSalesByYearClassConfiguration();
			this.PrepareSummaryOfSalesByYearPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<SummaryOfSalesByYear> GetSummaryOfSalesByYearClassConfiguration()
		{
			MappingConfiguration<SummaryOfSalesByYear> configuration = new MappingConfiguration<SummaryOfSalesByYear>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Summary of Sales by Year");
		
			return configuration;
		}
	
		public void PrepareSummaryOfSalesByYearPropertyConfigurations(MappingConfiguration<SummaryOfSalesByYear> configuration)
		{
			configuration.HasProperty(x => x.ShippedDate).HasFieldName("_shippedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShippedDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Subtotal).HasFieldName("_subtotal").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Subtotal").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<SummaryOfSalesByQuarter> GetSummaryOfSalesByQuarterMappingConfiguration()
		{
			MappingConfiguration<SummaryOfSalesByQuarter> configuration = this.GetSummaryOfSalesByQuarterClassConfiguration();
			this.PrepareSummaryOfSalesByQuarterPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<SummaryOfSalesByQuarter> GetSummaryOfSalesByQuarterClassConfiguration()
		{
			MappingConfiguration<SummaryOfSalesByQuarter> configuration = new MappingConfiguration<SummaryOfSalesByQuarter>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Summary of Sales by Quarter");
		
			return configuration;
		}
	
		public void PrepareSummaryOfSalesByQuarterPropertyConfigurations(MappingConfiguration<SummaryOfSalesByQuarter> configuration)
		{
			configuration.HasProperty(x => x.ShippedDate).HasFieldName("_shippedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShippedDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Subtotal).HasFieldName("_subtotal").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Subtotal").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<SalesTotalsByAmount> GetSalesTotalsByAmountMappingConfiguration()
		{
			MappingConfiguration<SalesTotalsByAmount> configuration = this.GetSalesTotalsByAmountClassConfiguration();
			this.PrepareSalesTotalsByAmountPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<SalesTotalsByAmount> GetSalesTotalsByAmountClassConfiguration()
		{
			MappingConfiguration<SalesTotalsByAmount> configuration = new MappingConfiguration<SalesTotalsByAmount>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales Totals by Amount");
		
			return configuration;
		}
	
		public void PrepareSalesTotalsByAmountPropertyConfigurations(MappingConfiguration<SalesTotalsByAmount> configuration)
		{
			configuration.HasProperty(x => x.SaleAmount).HasFieldName("_saleAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SaleAmount").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CompanyName).HasFieldName("_companyName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CompanyName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ShippedDate).HasFieldName("_shippedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShippedDate").IsNullable().HasColumnType("datetime");
		}
		public MappingConfiguration<SalesByCategory> GetSalesByCategoryMappingConfiguration()
		{
			MappingConfiguration<SalesByCategory> configuration = this.GetSalesByCategoryClassConfiguration();
			this.PrepareSalesByCategoryPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<SalesByCategory> GetSalesByCategoryClassConfiguration()
		{
			MappingConfiguration<SalesByCategory> configuration = new MappingConfiguration<SalesByCategory>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales by Category");
		
			return configuration;
		}
	
		public void PrepareSalesByCategoryPropertyConfigurations(MappingConfiguration<SalesByCategory> configuration)
		{
			configuration.HasProperty(x => x.CategoryID).HasFieldName("_categoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CategoryName).HasFieldName("_categoryName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryName").IsNotNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ProductSales).HasFieldName("_productSales").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductSales").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<QuarterlyOrder> GetQuarterlyOrderMappingConfiguration()
		{
			MappingConfiguration<QuarterlyOrder> configuration = this.GetQuarterlyOrderClassConfiguration();
			this.PrepareQuarterlyOrderPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<QuarterlyOrder> GetQuarterlyOrderClassConfiguration()
		{
			MappingConfiguration<QuarterlyOrder> configuration = new MappingConfiguration<QuarterlyOrder>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Quarterly Orders");
		
			return configuration;
		}
	
		public void PrepareQuarterlyOrderPropertyConfigurations(MappingConfiguration<QuarterlyOrder> configuration)
		{
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNullable().HasColumnType("nchar").HasLength(5);
			configuration.HasProperty(x => x.CompanyName).HasFieldName("_companyName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CompanyName").IsNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Country).HasFieldName("_country").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Country").IsNullable().HasColumnType("nvarchar").HasLength(15);
		}
		public MappingConfiguration<ProductsByCategory> GetProductsByCategoryMappingConfiguration()
		{
			MappingConfiguration<ProductsByCategory> configuration = this.GetProductsByCategoryClassConfiguration();
			this.PrepareProductsByCategoryPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductsByCategory> GetProductsByCategoryClassConfiguration()
		{
			MappingConfiguration<ProductsByCategory> configuration = new MappingConfiguration<ProductsByCategory>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Products by Category");
		
			return configuration;
		}
	
		public void PrepareProductsByCategoryPropertyConfigurations(MappingConfiguration<ProductsByCategory> configuration)
		{
			configuration.HasProperty(x => x.CategoryName).HasFieldName("_categoryName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryName").IsNotNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.QuantityPerUnit).HasFieldName("_quantityPerUnit").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("QuantityPerUnit").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.UnitsInStock).HasFieldName("_unitsInStock").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitsInStock").IsNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Discontinued).HasFieldName("_discontinued").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Discontinued").IsNotNullable().HasColumnType("bit").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<ProductsAboveAveragePrice> GetProductsAboveAveragePriceMappingConfiguration()
		{
			MappingConfiguration<ProductsAboveAveragePrice> configuration = this.GetProductsAboveAveragePriceClassConfiguration();
			this.PrepareProductsAboveAveragePricePropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductsAboveAveragePrice> GetProductsAboveAveragePriceClassConfiguration()
		{
			MappingConfiguration<ProductsAboveAveragePrice> configuration = new MappingConfiguration<ProductsAboveAveragePrice>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Products Above Average Price");
		
			return configuration;
		}
	
		public void PrepareProductsAboveAveragePricePropertyConfigurations(MappingConfiguration<ProductsAboveAveragePrice> configuration)
		{
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<ProductSalesFor1997> GetProductSalesFor1997MappingConfiguration()
		{
			MappingConfiguration<ProductSalesFor1997> configuration = this.GetProductSalesFor1997ClassConfiguration();
			this.PrepareProductSalesFor1997PropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductSalesFor1997> GetProductSalesFor1997ClassConfiguration()
		{
			MappingConfiguration<ProductSalesFor1997> configuration = new MappingConfiguration<ProductSalesFor1997>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Product Sales for 1997");
		
			return configuration;
		}
	
		public void PrepareProductSalesFor1997PropertyConfigurations(MappingConfiguration<ProductSalesFor1997> configuration)
		{
			configuration.HasProperty(x => x.CategoryName).HasFieldName("_categoryName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryName").IsNotNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ProductSales).HasFieldName("_productSales").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductSales").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<OrdersQry> GetOrdersQryMappingConfiguration()
		{
			MappingConfiguration<OrdersQry> configuration = this.GetOrdersQryClassConfiguration();
			this.PrepareOrdersQryPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<OrdersQry> GetOrdersQryClassConfiguration()
		{
			MappingConfiguration<OrdersQry> configuration = new MappingConfiguration<OrdersQry>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Orders Qry");
		
			return configuration;
		}
	
		public void PrepareOrdersQryPropertyConfigurations(MappingConfiguration<OrdersQry> configuration)
		{
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNullable().HasColumnType("nchar").HasLength(5);
			configuration.HasProperty(x => x.EmployeeID).HasFieldName("_employeeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EmployeeID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrderDate).HasFieldName("_orderDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.RequiredDate).HasFieldName("_requiredDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RequiredDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.ShippedDate).HasFieldName("_shippedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShippedDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.ShipVia).HasFieldName("_shipVia").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipVia").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Freight).HasFieldName("_freight").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Freight").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ShipName).HasFieldName("_shipName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipName").IsNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ShipAddress).HasFieldName("_shipAddress").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipAddress").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.ShipCity).HasFieldName("_shipCity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipCity").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ShipRegion).HasFieldName("_shipRegion").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipRegion").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ShipPostalCode).HasFieldName("_shipPostalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipPostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.ShipCountry).HasFieldName("_shipCountry").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipCountry").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.CompanyName).HasFieldName("_companyName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CompanyName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Address").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Region).HasFieldName("_region").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Region").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.PostalCode).HasFieldName("_postalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.Country).HasFieldName("_country").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Country").IsNullable().HasColumnType("nvarchar").HasLength(15);
		}
		public MappingConfiguration<OrderSubtotal> GetOrderSubtotalMappingConfiguration()
		{
			MappingConfiguration<OrderSubtotal> configuration = this.GetOrderSubtotalClassConfiguration();
			this.PrepareOrderSubtotalPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<OrderSubtotal> GetOrderSubtotalClassConfiguration()
		{
			MappingConfiguration<OrderSubtotal> configuration = new MappingConfiguration<OrderSubtotal>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Order Subtotals");
		
			return configuration;
		}
	
		public void PrepareOrderSubtotalPropertyConfigurations(MappingConfiguration<OrderSubtotal> configuration)
		{
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Subtotal).HasFieldName("_subtotal").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Subtotal").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<OrderDetailsExtended> GetOrderDetailsExtendedMappingConfiguration()
		{
			MappingConfiguration<OrderDetailsExtended> configuration = this.GetOrderDetailsExtendedClassConfiguration();
			this.PrepareOrderDetailsExtendedPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<OrderDetailsExtended> GetOrderDetailsExtendedClassConfiguration()
		{
			MappingConfiguration<OrderDetailsExtended> configuration = new MappingConfiguration<OrderDetailsExtended>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Order Details Extended");
		
			return configuration;
		}
	
		public void PrepareOrderDetailsExtendedPropertyConfigurations(MappingConfiguration<OrderDetailsExtended> configuration)
		{
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Quantity).HasFieldName("_quantity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Quantity").IsNotNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Discount).HasFieldName("_discount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Discount").IsNotNullable().HasColumnType("real").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ExtendedPrice).HasFieldName("_extendedPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ExtendedPrice").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<Invoice> GetInvoiceMappingConfiguration()
		{
			MappingConfiguration<Invoice> configuration = this.GetInvoiceClassConfiguration();
			this.PrepareInvoicePropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Invoice> GetInvoiceClassConfiguration()
		{
			MappingConfiguration<Invoice> configuration = new MappingConfiguration<Invoice>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Invoices");
		
			return configuration;
		}
	
		public void PrepareInvoicePropertyConfigurations(MappingConfiguration<Invoice> configuration)
		{
			configuration.HasProperty(x => x.ShipName).HasFieldName("_shipName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipName").IsNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ShipAddress).HasFieldName("_shipAddress").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipAddress").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.ShipCity).HasFieldName("_shipCity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipCity").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ShipRegion).HasFieldName("_shipRegion").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipRegion").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.ShipPostalCode).HasFieldName("_shipPostalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipPostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.ShipCountry).HasFieldName("_shipCountry").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipCountry").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNullable().HasColumnType("nchar").HasLength(5);
			configuration.HasProperty(x => x.CustomerName).HasFieldName("_customerName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Address").IsNullable().HasColumnType("nvarchar").HasLength(60);
			configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Region).HasFieldName("_region").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Region").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.PostalCode).HasFieldName("_postalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PostalCode").IsNullable().HasColumnType("nvarchar").HasLength(10);
			configuration.HasProperty(x => x.Country).HasFieldName("_country").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Country").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.Salesperson).HasFieldName("_salesperson").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Salesperson").IsNotNullable().HasColumnType("nvarchar").HasLength(31);
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrderDate).HasFieldName("_orderDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.RequiredDate).HasFieldName("_requiredDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RequiredDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.ShippedDate).HasFieldName("_shippedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShippedDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.ShipperName).HasFieldName("_shipperName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipperName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Quantity).HasFieldName("_quantity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Quantity").IsNotNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Discount).HasFieldName("_discount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Discount").IsNotNullable().HasColumnType("real").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ExtendedPrice).HasFieldName("_extendedPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ExtendedPrice").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Freight).HasFieldName("_freight").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Freight").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<CustomerAndSuppliersByCity> GetCustomerAndSuppliersByCityMappingConfiguration()
		{
			MappingConfiguration<CustomerAndSuppliersByCity> configuration = this.GetCustomerAndSuppliersByCityClassConfiguration();
			this.PrepareCustomerAndSuppliersByCityPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<CustomerAndSuppliersByCity> GetCustomerAndSuppliersByCityClassConfiguration()
		{
			MappingConfiguration<CustomerAndSuppliersByCity> configuration = new MappingConfiguration<CustomerAndSuppliersByCity>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Customer and Suppliers by City");
		
			return configuration;
		}
	
		public void PrepareCustomerAndSuppliersByCityPropertyConfigurations(MappingConfiguration<CustomerAndSuppliersByCity> configuration)
		{
			configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.CompanyName).HasFieldName("_companyName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CompanyName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.ContactName).HasFieldName("_contactName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactName").IsNullable().HasColumnType("nvarchar").HasLength(30);
			configuration.HasProperty(x => x.Relationship).HasFieldName("_relationship").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Relationship").IsNotNullable().HasColumnType("varchar").HasLength(9);
		}
		public MappingConfiguration<CurrentProductList> GetCurrentProductListMappingConfiguration()
		{
			MappingConfiguration<CurrentProductList> configuration = this.GetCurrentProductListClassConfiguration();
			this.PrepareCurrentProductListPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<CurrentProductList> GetCurrentProductListClassConfiguration()
		{
			MappingConfiguration<CurrentProductList> configuration = new MappingConfiguration<CurrentProductList>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Current Product List");
		
			return configuration;
		}
	
		public void PrepareCurrentProductListPropertyConfigurations(MappingConfiguration<CurrentProductList> configuration)
		{
			configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
		}
		public MappingConfiguration<CategorySalesFor1997> GetCategorySalesFor1997MappingConfiguration()
		{
			MappingConfiguration<CategorySalesFor1997> configuration = this.GetCategorySalesFor1997ClassConfiguration();
			this.PrepareCategorySalesFor1997PropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<CategorySalesFor1997> GetCategorySalesFor1997ClassConfiguration()
		{
			MappingConfiguration<CategorySalesFor1997> configuration = new MappingConfiguration<CategorySalesFor1997>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Category Sales for 1997");
		
			return configuration;
		}
	
		public void PrepareCategorySalesFor1997PropertyConfigurations(MappingConfiguration<CategorySalesFor1997> configuration)
		{
			configuration.HasProperty(x => x.CategoryName).HasFieldName("_categoryName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryName").IsNotNullable().HasColumnType("nvarchar").HasLength(15);
			configuration.HasProperty(x => x.CategorySales).HasFieldName("_categorySales").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategorySales").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<AlphabeticalListOfProduct> GetAlphabeticalListOfProductMappingConfiguration()
		{
			MappingConfiguration<AlphabeticalListOfProduct> configuration = this.GetAlphabeticalListOfProductClassConfiguration();
			this.PrepareAlphabeticalListOfProductPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<AlphabeticalListOfProduct> GetAlphabeticalListOfProductClassConfiguration()
		{
			MappingConfiguration<AlphabeticalListOfProduct> configuration = new MappingConfiguration<AlphabeticalListOfProduct>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Alphabetical list of products");
		
			return configuration;
		}
	
		public void PrepareAlphabeticalListOfProductPropertyConfigurations(MappingConfiguration<AlphabeticalListOfProduct> configuration)
		{
			configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductName).HasFieldName("_productName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductName").IsNotNullable().HasColumnType("nvarchar").HasLength(40);
			configuration.HasProperty(x => x.SupplierID).HasFieldName("_supplierID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SupplierID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CategoryID).HasFieldName("_categoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.QuantityPerUnit).HasFieldName("_quantityPerUnit").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("QuantityPerUnit").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitsInStock).HasFieldName("_unitsInStock").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitsInStock").IsNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitsOnOrder).HasFieldName("_unitsOnOrder").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitsOnOrder").IsNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ReorderLevel).HasFieldName("_reorderLevel").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ReorderLevel").IsNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Discontinued).HasFieldName("_discontinued").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Discontinued").IsNotNullable().HasColumnType("bit").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CategoryName).HasFieldName("_categoryName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CategoryName").IsNotNullable().HasColumnType("nvarchar").HasLength(15);
		}
	}
}
#pragma warning restore 1591
